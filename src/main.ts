import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';
import { LoggerService } from './common/logger/logger.service';
import { GlobalExceptionFilter } from './common/filters/global-exception.filter';

async function bootstrap() {
  const app = await NestFactory.create(AppModule, {
    bodyParser: true,
    rawBody: true,
  });

  // –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä –∏–∑ DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  const logger = app.get(LoggerService);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—à –ª–æ–≥–≥–µ—Ä –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã–π
  app.useLogger(logger);

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –∏—Å–∫–ª—é—á–µ–Ω–∏–π
  app.useGlobalFilters(new GlobalExceptionFilter(logger));

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å API
  app.setGlobalPrefix('api/v1');

  // –í–∞–ª–∏–¥–∞—Ü–∏—è
  app.useGlobalPipes(new ValidationPipe({
    transform: true,
    whitelist: true,
    forbidNonWhitelisted: true,
  }));

  // CORS
  app.enableCors();

  // Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
  const config = new DocumentBuilder()
    .setTitle('Fotometry Backend API')
    .setDescription('API –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å–±–æ—Ä–∞, —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –ò–°–ó')
    .setVersion('1.0')
    .addTag('Satellites - –ö–∞—Ç–∞–ª–æ–≥', '–ü–æ–∏—Å–∫ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ TLE —Å–ø—É—Ç–Ω–∏–∫–æ–≤')
    .addTag('Satellites - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø—É—Ç–Ω–∏–∫–∞–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
    .addTag('Ingest - –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö', '–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π')
    .addTag('Observations - –ù–∞–±–ª—é–¥–µ–Ω–∏—è', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏')
    .addTag('Analytics - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è–º')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document);

  const port = 5000;
  await app.listen(port);
  
  logger.log(`üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${port}`, 'Bootstrap');
  logger.log(`üìö Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${port}/api/docs`, 'Bootstrap');
}

bootstrap();
